pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/BThangaraju/calculator-microservice.git'
            }
        }

        stage('Build') {
            steps {
                sh 'docker build -t iiitb/calculator-microservice:latest -f docker/Dockerfile .'
            }
        }

        stage('Test') {
            steps {
                sh 'docker run -e PYTHONPATH=/app iiitb/calculator-microservice pytest /tests'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withDockerRegistry([url: 'https://index.docker.io/v1/', credentialsId: 'DockerHubCred']) {
                    sh 'docker push iiitb/calculator-microservice:latest'
                }
            }
        }

        stage('Pull from Docker Hub') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: './ansible/playbook_pull.yml',
                        inventory: 'inventory'
                    )
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl apply -f ./kubernetes/deployment.yml --validate=false'
                sh 'kubectl apply -f ./kubernetes/service.yml --validate=false'
            }
        }

        stage('Ansible Post-Configuration') {
            steps {
                sh 'ansible-playbook -i ansible/inventory ansible/playbook.yml'
                echo 'Cleaning up unwanted Docker containers and images...'
                script {
                    // Remove stopped containers
                    sh '''
                    echo "Removing stopped containers..."
                    docker container prune -f
                    '''
                    // Remove dangling images
                    sh '''
                    echo "Removing dangling images..."
                    docker image prune -f
                    '''
                }
                // Test the deployed application
                sh 'curl "http://192.168.49.2:30007/add?a=10&b=20"'
            }
        }
    }

    post {
        success {
            mail to: 'b.thangaraju@iiitb.ac.in',
                 subject: "Application Deployment SUCCESS: Build ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The build was successful!"
        }
        failure {
            mail to: 'b.thangaraju@iiitb.ac.in',
                 subject: "Application Deployment FAILURE: Build ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The build failed."
        }
        always {
            cleanWs()
        }
    }
}
